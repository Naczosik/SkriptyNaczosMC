#statusy ::player::* :waiting, starting, ingame, spec
#statusy gier ::status :waiting, starting, ingame
#teleporty kolorki: mid, spec,
options:
    notenoughtplayers: "Za mało graczy, aby wystartować..."
    startingmessage: Gra startuje za
    alreadystartingmessage: "Gra już startuje, dodano do kolejki"
    alreadystartedgmessage: "Gra już trwa, dodano na widownie, dałączysz do kolejnej rozgrywki."

variables:
    {minigrykolorkiminplayers} = 4
    {minigrykolorkistartingtime} = 10

command /kolorki:
    trigger:
        if {minigry::kolorki::status} is "starting":
            teleport player to {minigry::kolorki::tp::mid}
            set {minigry::kolorki::player::%player%} to "starting"
            send {@alreadystartingmessage}
        if {minigry::kolorki::status} is "ingame":
            teleport player to {minigry::kolorki::tp::spec}
            set {minigry::kolorki::player::%player%} to "spec"
            send {@alreadystartedgmessage}
        if {minigry::kolorki::status} is "waiting":
            teleport player to {minigry::kolorki::tp::mid}
            set {minigry::kolorki::player::%player%} to "waiting"
            loop {minigry::kolorki::player::*}:
                add 1 to {_countwaiting}
            if {_countwaiting} < {@minigrykolorkiminplayers}:
                send {@notenoughtplayers}
                stop
            loop {minigry::kolorki::player::*}:
                set {minigry::kolorki::player::%loop-index%} to "starting"
            set {minigry::kolorki::status} to "starting"
            loop {@minigrykolorkistartingtime} times:
                set {_countwaiting} to 0
                loop {minigry::kolorki::player::*}:
                    add 1 to {_countwaiting}
                    if {_countwaiting} < {@minigrykolorkiminplayers}:
                        send {@notenoughtplayers}
                        set {minigry::kolorki::status} to "waiting"
                        stop
                    set {_timeleft} to {@minigrykolorkistartingtime} - loop-number-1
                    set {_p} to loop-index parsed as player
                    send "{@startingmessage} %{_timeleft}%..." to {_p}
                wait 1 second
            loop {minigry::kolorki::player::*}:
                teleport loop-index parsed as player to {minigry::kolorki::tp::mid}
                set {minigry::kolorki::player::%loop-index%} to "ingame"
            set {minigry::kolorki::status} to "ingame"



function minigame(minigamename: text, minigameplayer: player):
    if {minigry::%{_minigamename}%::status} is "starting":
        teleport {_minigameplayer} to {minigry::%{_minigamename}%::tp::mid}
        set {minigry::%{_minigamename}%::player::%{_minigameplayer}%} to "starting"
        send {@alreadystartingmessage} to {_minigameplayer}
    if {minigry::%{_minigamename}%::status} is "ingame":
        teleport {_minigameplayer} to {minigry::%{_minigamename}%::tp::spec}
        set {minigry::%{_minigamename}%::player::%{_minigameplayer}%} to "spec"
        send {@alreadystartedgmessage} to {_minigameplayer}
    if {minigry::%{_minigamename}%::status} is "waiting":
        teleport {_minigameplayer} to {minigry::%{_minigamename}%::tp::mid}
        set {minigry::%{_minigamename}%::player::%{_minigameplayer}%} to "waiting"
        loop {minigry::%{_minigamename}%::player::*}:
            add 1 to {_countwaiting}
        if {_countwaiting} < {minigry%{_minigamename}%minplayer}:
            send {@notenoughtplayers} to {_minigameplayer}
            stop
        loop {minigry::%{_minigamename}%::player::*}:
            set {minigry::%{_minigamename}%::player::%loop-index%} to "starting"
        set {minigry::%{_minigamename}%::status} to "starting"
        loop {minigry%{_minigamename}%startingtime} times:
            set {_countwaiting} to 0
            loop {minigry::%{_minigamename}%::player::*}:
                add 1 to {_countwaiting}
                if {_countwaiting} < {minigry%{_minigamename}%minplayer}:
                    send {@notenoughtplayers} to loop-index parsed as player
                    set {minigry::%{_minigamename}%::status} to "waiting"
                    stop
                set {_timeleft} to {@minigrykolorkistartingtime} - loop-number-1
                send "{@startingmessage} %{_timeleft}%..." to loop-index parsed as player
            wait 1 second
        loop {minigry::%{_minigamename}%::player::*}:
            teleport {_minigameplayer} to {minigry::%{_minigamename}%::tp::mid}
            set {minigry::%{_minigamename}%::player::%loop-index%} to "ingame"
        set {minigry::%{_minigamename}%::status} to "ingame"
